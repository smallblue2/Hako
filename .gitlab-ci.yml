default:
  image: emscripten/emsdk:4.0.0

stages:
  - lint
  - build
  - validate
  - test

lint_filesystem_js:
  stage: lint
  script:
    - cd src/filesystem
    - npm install
    - npm run lint

lint_filesystem_c:
  stage: lint
  script:
    - cd src/filesystem
    - apt-get update && apt-get -y install clang-tidy cppcheck
    - make lint

lint_filesystem_tests:
  stage: lint
  script:
    - cd src/filesystem
    - npm install
    - npm run lint-tests

lint_processes:
  stage: lint
  script:
    - cd src/processes
    - npm install
    - npm run lint
  
build_filesystem:
  stage: build
  script:
    - cd src/filesystem
    - make build
    # Confirm our files are there
    - test -e api/compiled.mjs
    - test -e api/compiled.wasm
  # Artifacts are to be kept between jobs
  artifacts:
    paths:
      - src/filesystem/api/compiled.mjs
      - src/filesystem/api/compiled.wasm
    expire_in: 1 week

build_site:
  image: docker:latest
  stage: build
  script:
    - cd src/
    - docker build -f Containerfile -t image:$CI_COMMIT_REF_NAME .
    - docker run -d --rm --name $CI_COMMIT_REF_NAME-instance image:$CI_COMMIT_REF_NAME
    - docker cp $CI_COMMIT_REF_NAME-instance:/site/build/ site/build 
  artifacts:
    paths:
      - src/site/build
    expire_in: 1 day

validate_artefact_persistence:
  stage: validate
  dependencies:
    - build_filesystem
  script:
    # Ensure artifacts have persisted
    - test -e src/filesystem/api/compiled.mjs
    - test -e src/filesystem/api/compiled.wasm

validate_wasm:
  stage: validate
  dependencies:
    - build_filesystem
  script:
    - apt-get update && apt-get install -y wabt
    - wasm-validate src/filesystem/api/compiled.wasm    

test_filesystem:
  stage: test
  script:
    - cat /etc/apt/sources.list
    - cat /etc/os-release
    - apt-get update
    - apt-get install -y ca-certificates wget xdg-utils chromium-browser libgbm1
    - cd src/filesystem
    - npm install
    - npm run start-server &
    # Wait for the server to start
    - until curl -s http://localhost:8080 > /dev/null; do echo "Waiting for server..."; sleep 1; done
    - npm run test
