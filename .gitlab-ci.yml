default:
  image: emscripten/emsdk:4.0.0

stages:
  - lint
  - build
  - validate
  - test

lint_filesystem_js:
  stage: lint
  script:
    - cd src
    - npm install
    - npm run lint-fs

lint_filesystem_c:
  stage: lint
  script:
    - cd src
    - apt-get update && apt-get install clang-tidy cppcheck
    - emcc -c -o filesystem/out/main.o filesystem/src/main.c -sSTRICT
    - clang-tidy filesystem/src/main.c --I /emsdk/upstream/emscripten/system/include/
    - cppcheck src/filesystem/src/main.c --enable=all --suppress=unmatchedSuppression

lint_tests:
  stage: lint
  script:
    - cd src
    - npm install
    - npm run lint-tests
  
build_filesystem:
  stage: build
  script:
    - cd src/filesystem
    - make build
    # Confirm our files are there
    - test -e api/compiled.mjs
    - test -e api/compiled.wasm
  # Artifacts are to be kept between jobs
  artifacts:
    paths:
      - src/filesystem/api/compiled.mjs
      - src/filesystem/api/compiled.wasm
    expire_in: 1 week

validate_artefact_persistence:
  stage: validate
  dependencies:
    - build_filesystem
  script:
    # Ensure artifacts have persisted
    - test -e src/filesystem/api/compiled.mjs
    - test -e src/filesystem/api/compiled.wasm

validate_wasm:
  stage: validate
  dependencies:
    - build_filesystem
  script:
    - apt-get update && apt-get install -y wabt
    - wasm-validate src/filesystem/api/compiled.wasm    

test_filesystem:
  stage: test
  script:
    - cat /etc/apt/sources.list
    - cat /etc/os-release
    - apt-get update
    - apt-get install -y ca-certificates wget xdg-utils chromium-browser libgbm1
    - cd src
    - npm install
    - npm run start-server &
    # Wait for the server to start
    - until curl -s http://localhost:8080 > /dev/null; do echo "Waiting for server..."; sleep 1; done
    - npm run filesystem-test
