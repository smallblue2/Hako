default:
  image: emscripten/emsdk:4.0.0

stages:
  - lint
  - build
  - validate
  - test
  - deploy

# ----------------- LINTING ----------------- 

lint_filesystem_js:
  stage: lint
  script:
    - cd src/filesystem
    - npm install
    - npm run lint

lint_filesystem_c:
  stage: lint
  script:
    - cd src/filesystem
    - apt-get update && apt-get -y install clang-tidy cppcheck
    - make lint

lint_filesystem_tests:
  stage: lint
  script:
    - cd src/filesystem
    - npm install
    - npm run lint-tests

lint_processes:
  stage: lint
  script:
    - cd src/processes
    - npm install
    - npm run lint

lint_processes_c:
  stage: lint
  script:
    - cd src/processes
    - ls -l Makefile
    - cat Makefile | head -20
    - apt-get update && apt-get -y install clang-tidy cppcheck
    - make lint

lint_processes_tests:
  stage: lint
  script:
    - cd src/processes
    - npm install
    - npm run lint-tests

# ----------------- BUILDING ----------------- 
  
build_filesystem:
  stage: build
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - apt-get update
    - apt-get install -y meson
    - just filesystem
  # Artifacts are to be kept between jobs
  artifacts:
    paths:
      - build/filesystem/
    expire_in: 1 day

build_processes:
  stage: build
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - apt-get update
    - apt-get install -y meson
    - just processes
  artifacts:
    paths:
      - build/processes/
    expire_in: 1 day

build_vendor:
  stage: build
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - just build-ncurses
    - just build-libedit
  cache:
    key:
      files:
        - src/runtime/vendor/ncurses
        - src/runtime/vendor/libedit

build_runtime:
  stage: build
  dependencies:
    - build_vendor
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - apt-get update
    - apt-get install -y meson
    - just runtime-novendor
  # Artifacts are to be kept between jobs
  artifacts:
    paths:
      - build/runtime/
    expire_in: 1 day

# ----------------- VALIDATION ----------------- 

validate_artefact_persistence:
  stage: validate
  dependencies:
    - build_filesystem
    - build_processes
    - build_vendor
    - build_runtime
  script:
    # Ensure artifacts have persisted
    - test -e build/filesystem/filesystem.mjs
    - test -e build/filesystem/filesystem.wasm
    - test -e build/filesystem/index.html
    - test -e build/filesystem/index.js
    - test -e build/filesystem/api.mjs
    - test -e build/filesystem/definitions.mjs
    - test -e build/filesystem/filesystem.mjs
    - test -e build/filesystem/filesystem.wasm
    - test -e build/processes/processes.mjs
    - test -e build/processes/processes.wasm
    - test -e build/processes/signal.mjs
    - test -e build/processes/common.mjs
    - test -e build/processes/pipe.mjs
    - test -e build/processes/processTable.mjs
    - test -e build/processes/processManager.mjs
    - test -e build/processes/process.mjs
    - test -e build/runtime/runtime.mjs
    - test -e build/runtime/runtime.wasm
    - test -e build/runtime/runtime-node.mjs
    - test -e build/runtime/runtime-node.wasm

validate_wasm:
  stage: validate
  dependencies:
    - build_filesystem
    - build_processes
    - build_runtime
  script:
    - apt-get update && apt-get install -y wabt
    - wasm-validate --enable-threads build/filesystem/filesystem.wasm
    - wasm-validate --enable-threads build/processes/processes.wasm
    - wasm-validate --enable-threads build/runtime/runtime.wasm
    - wasm-validate --enable-threads build/runtime/runtime-node.wasm

# ----------------- TESTING ----------------- 

test_filesystem:
  stage: test
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - apt-get update
    - apt-get install -y ca-certificates wget xdg-utils chromium-browser libgbm1 meson nq
    - cd src/filesystem && npm install
    - PATH=$PATH:/root/.deno/bin/ just test-filesystem

test_processes:
  stage: test
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - apt-get update
    - apt-get install -y ca-certificates wget xdg-utils chromium-browser libgbm1 meson nq
    - cd src/processes && npm install
    - PATH=$PATH:/root/.deno/bin/ just test-processes

test_runtime:
  stage: test
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - apt-get update
    - apt-get install -y chromium-browser meson
    - just test-runtime

test_integration:
  stage: test
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin/
    - apt-get update
    - apt-get install -y meson
    - just test-integration

# ----------------- DEPLOYMENT ----------------- 
